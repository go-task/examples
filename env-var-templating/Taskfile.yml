# CGO environment variables are used as a motivating example.

flexible:
  # A task intended to be extended or called by others. Note the use of yaml
  # anchors "&flexible_env"
  cmds:
    - ./showenv.sh
  env: &flexible_env
    # OTHERPATH defaults to the emptystring in Taskvars.yml, and can be set
    # on the command line: OTHERPATH=other/path/ task flexible
    # Or in any task calling or extending this one
    CGO_LDFLAGS: "-L{{.OTHERPATH}}some/path/lib {{- range $_, $libname := .LIBNAMES | splitLines}}{{if $libname}} -l{{$libname}}{{end}}{{end}}"
  vars:
    LIBNAMES: |
      aaa
      bbb
      ccc

calling:
  cmds:
    - task: flexible
      vars:
        LIBNAMES: |
          xxx
          yyy

extending:
  cmds:
    - ./showenv.sh
  env:
    <<: *flexible_env
    CGO_ANOTHER_VAR: "extending env key, this is a shallow merge"
  vars:
    # These variables override any pulled in from flexible_env
    LIBNAMES: |
      ddd
      eee


envproperty:
  cmds:
    - ./showenv.sh
  env:
    CGO_LDFLAGS: "-L/some/path -laaa -lbbb -lccc"

possible:
  # Notice the quotes guarding the variable references on the second line of
  # the cmds.
  cmds:
    - |
      CGO_LDFLAGS="-L/some/path -laaa -lbbb -lccc"
      CGO_LDFLAGS="$CGO_LDFLAGS" ./showenv.sh "$CGO_LDFLAGS"

wrong:
  # In this instance the quotes are missing, the output will be:
  #
  # CGO_LDFLAGS=-L/some/path-laaa-lbbb-lccc
  # $@=-L/some/path-laaa-lbbb-lccc
  cmds:
    - |
      CGO_LDFLAGS="-L/some/path -laaa -lbbb -lccc"
      CGO_LDFLAGS=$CGO_LDFLAGS ./showenv.sh $CGO_LDFLAGS
